p- please put nng.dll into system32 file
p- please use win32 when using kinect v1
p- please debug your error type or information by adding breakpoint at row 184 in the path: \project\cgv\cgv\render\context.cpp

/// error handling
void context::error(const std::string& message, const render_component* rc) const
{
	if (rc) //add breakpoint
		rc->last_error = message;
	if (get_render_config()->show_error_on_console)
		std::cerr << message << std::endl;
	if (get_render_config()->abort_on_error)
		abort();
}

p- About EID_POSE, when int ci = vrpe.get_trackable_index();

if ci == -1, tracking the headset, that is to say HMD,
if ci == 0, tracking the right-hand controller,
if ci == 1, tracking the left-hand controller,
if there are more devices, e.g. trackers, the ci will be uncertain index, but the HMD should always be -1

p- The tracking of HMD is very unstable, the reason should be investigated.

p- in the config file, DONT write a space " "

p- vrpe.get_rotation_quaternion() is different from vrpe.get_quaternion(), if you want to use the orientation of the tracking device, you should choose vrpe.get_quaternion()

p- when you only turn on one controller, the trackable_index is 2 instead of 0 or 1, when you turn on two controllers, the trackable_index will be 0 or 1 again 

p- when you press F12, it is not sure if it goes to its definition, maybe go to its child class or its parent class

p- how to use renderer

auto& rcr = cgv::render::ref_rounded_cone_renderer(ctx);  
if (!hue_plane.empty()) {
	rcr.set_render_style(cone_style);
	rcr.set_position_array(ctx, hue_plane);
	rcr.set_color_array(ctx, hue_colors);
	rcr.render(ctx, 0, hue_plane.size());
        //do not disable the renderer here
}
